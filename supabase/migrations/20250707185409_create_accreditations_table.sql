-- ========= ACCREDITATIONS TABLE AND RLS POLICIES =========

-- 1. Create the table itself.
CREATE TABLE IF NOT EXISTS public.accreditations (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    orgid TEXT NOT NULL,
    universityid TEXT NOT NULL,
    academic_year TEXT NOT NULL,
    submission_status TEXT NOT NULL DEFAULT 'Not Submitted',
    submitted_at TIMESTAMPTZ,
    file_path TEXT,
    reviewer_notes TEXT,
    created_at TIMESTAMPTZ DEFAULT NOW(),
    updated_at TIMESTAMPTZ DEFAULT NOW(),
    CONSTRAINT accreditations_orgid_fkey FOREIGN KEY (orgid) REFERENCES organizations(orgid) ON DELETE CASCADE,
    CONSTRAINT accreditations_universityid_fkey FOREIGN KEY (universityid) REFERENCES university(universityid) ON DELETE CASCADE,
    CONSTRAINT unique_accreditation_per_year UNIQUE (orgid, academic_year)
);

-- 2. Enable RLS on the table.
ALTER TABLE public.accreditations ENABLE ROW LEVEL SECURITY;

-- 3. Create the necessary policies.
-- (Dropping them first ensures the script can be run multiple times)
DROP POLICY IF EXISTS "Members can view their org accreditation" ON public.accreditations;
CREATE POLICY "Members can view their org accreditation"
ON public.accreditations FOR SELECT USING (EXISTS (SELECT 1 FROM public.orgmember JOIN public.student ON public.orgmember.studentid = public.student.studentid WHERE public.student.user_id = auth.uid() AND public.orgmember.orgid = public.accreditations.orgid));

DROP POLICY IF EXISTS "Officers can insert accreditation records" ON public.accreditations;
CREATE POLICY "Officers can insert accreditation records"
ON public.accreditations FOR INSERT WITH CHECK (EXISTS (SELECT 1 FROM public.orgmember JOIN public.student ON public.orgmember.studentid = public.student.studentid WHERE public.student.user_id = auth.uid() AND public.orgmember.orgid = public.accreditations.orgid AND public.orgmember.position IN ('President', 'Vice President', 'PRO', 'Secretary', 'Treasurer')));

DROP POLICY IF EXISTS "Officers can update accreditation records" ON public.accreditations;
CREATE POLICY "Officers can update accreditation records"
ON public.accreditations FOR UPDATE USING (EXISTS (SELECT 1 FROM public.orgmember JOIN public.student ON public.orgmember.studentid = public.student.studentid WHERE public.student.user_id = auth.uid() AND public.orgmember.orgid = public.accreditations.orgid AND public.orgmember.position IN ('President', 'Vice President', 'PRO', 'Secretary', 'Treasurer')));